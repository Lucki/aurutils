#!/bin/bash
# aur-chroot - build packages using systemd-nspawn
set -o errexit
readonly argv0=chroot
readonly PATH=/bin:/usr/bin
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
machine=$(uname -m)
readonly machine

# default arguments
directory=/var/lib/aurbuild/$machine
gpg_args=(--detach-sign --no-armor --batch)
makechrootpkg_args=(-cu)
makepkg_conf=/usr/share/devtools/makepkg-$machine.conf
pacman_conf=/usr/share/devtools/pacman-extra.conf

# default options
prepare=1 build=1 sign=0

conf_options() {
    printf '[options]\n'
    pacconf --config="$1" --options --raw
}

conf_repo() {
    while IFS= read -r; do
        printf '[%s]\n' "$REPLY"
        pacconf --config="$1" --raw --repo="$REPLY"
    done
}

conf_devtools() {
    # print pacman options from devtools
    conf_options "$1"

    # https://git.archlinux.org/devtools.git/tree/mkarchroot.in#n54
    printf '#CacheDir=\n'

    # print pacman repos from host
    pacconf --repo-list | conf_repo '/etc/pacman.conf'
}

trap_exit() {
    if ! [[ -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

usage() {
    printf >&2 'usage: %s [-CDM <path>] [-BP] -- <makechrootpkg args>' "$argv0"
    exit 1
}

while getopts :BPsC:D:M: opt; do
    case $opt in
        C) pacman_conf=$OPTARG  ;;
        D) directory=$OPTARG    ;;
        M) makepkg_conf=$OPTARG ;;
        B) build=0   ;;
        P) prepare=0 ;;
        s) sign=1    ;;
        *) usage     ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if (($#)); then
    makechrootpkg_args=("$@")
fi

trap 'trap_exit' EXIT
tmp=$(mktemp -d)

if ((prepare)); then
    conf_devtools "$pacman_conf" >"$tmp"/pacman.conf

    if [[ -f $directory/root/.arch-chroot ]]; then
        # locking is done by systemd-nspawn
        sudo arch-nspawn -C "$tmp"/pacman.conf -M "$makepkg_conf" "$directory"/root pacman -Syu --noconfirm
    else
        # XXX parent path is not created by mkarchroot
        if [[ ! -d $directory ]]; then
            sudo install -d "$directory" -m 755 -v
        fi
        sudo mkarchroot  -C "$tmp"/pacman.conf -M "$makepkg_conf" "$directory"/root base-devel
    fi
fi

if ((build)); then
    # XXX pass on required environment variables for package signing
    # to makechrootpkg, or sign packages manually
    sudo PKGDEST="${PKGDEST:-$PWD}" makechrootpkg -r "$directory" "${makechrootpkg_args[@]}"
else
    printf >&2 'container path: %q\n' "$directory"
    exit 0
fi

# vim: set et sw=4 sts=4 ft=sh:
